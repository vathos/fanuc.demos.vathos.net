PROGRAM trigger
%NOLOCKGROUP
VAR
  connection  : STRING[16]
  workflow    : STRING[16]
  async       : INTEGER
  asyncStr    : STRING[4]
  status      : INTEGER
  fid         : FILE
  response    : STRING[128]
%INCLUDE utils.h
BEGIN

  -- parse arguments
  GET_TPE_STR(1, connection)
  GET_TPE_STR(2, workflow)
  GET_TPE_INT(3, async)
  CNV_INT_STR(async, 1, 0, asyncStr)
  asyncStr = SUB_STR(asyncStr, 2, 1)
  WRITE('Arg ', connection)

  SET_FILE_ATR(fid, ATR_IA)
  -- clear and re-establish connection
  MSG_DISCO(connection, status)
  MSG_CONNECT(connection, status)
  IF status<>0 THEN
    WRITE TPERROR('[trigger] Connection failed with status ', status, CR)
    ABORT
  ENDIF

  -- open file handle and write message
  OPEN FILE fid('rw', connection)
  WRITE fid('trigger;' + workflow + ';' + asyncStr, CR)
  status = IO_STATUS(fid)
  IF status<>0 THEN
    WRITE TPERROR('[trigger] Could not open socket for writing with status', status, CR)
    MSG_DISCO(connection, status)
    ABORT
  ENDIF

  -- read response
  response = ''
  READ fid(response)
  status = IO_STATUS(fid)
  IF status<>0 THEN
    CLOSE FILE fid
    MSG_DISCO(connection, status)
    WRITE TPERROR('[trigger] Read response failed with status', status, CR)
    ABORT
  ENDIF

  -- check for server-side errors
  IF SUB_STR(response, 1, 1)='-' THEN
    WRITE TPERROR('[trigger] Server error', CR)
  ENDIF
  
  CLOSE FILE fid
  MSG_DISCO(connection, status)
END trigger