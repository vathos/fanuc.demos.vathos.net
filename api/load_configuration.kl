PROGRAM load_configuration
VAR
  connection      : STRING[16]
  product_id      : STRING[32]
  workflow        : STRING[32]
  status          : INTEGER
  fid             : FILE
  response        : STRING[128]
%INCLUDE utils.h
BEGIN
  GET_TPE_STR(1, connection)
  GET_TPE_STR(2, product_id)
  GET_TPE_STR(3, workflow)
  
  -- clear and re-establish connection
  MSG_DISCO(connection, status)
  MSG_CONNECT(connection, status)
  IF status<>0 THEN
    WRITE TPERROR('[load_configuration] Connection failed with status ', status, CR)
    ABORT
  ENDIF

  -- open file handle and write message
  SET_FILE_ATR(fid, ATR_IA)
  OPEN FILE fid('rw', connection)
  WRITE fid('load_configuration;' + product_id + ';' + workflow, CR)
  
  status = IO_STATUS(fid)
  IF status<>0 THEN
    WRITE TPERROR('[load_configuration] Could not open socket for writing with status', status, CR)
    MSG_DISCO(connection, status)
    ABORT
  ENDIF

  -- read response
  response = ''
  READ fid(response)
  status = IO_STATUS(fid)
  IF status<>0 THEN
    CLOSE FILE fid
    MSG_DISCO(connection, status)
    WRITE TPERROR('[load_configuration] Read response failed with status', status, CR)
    ABORT
  ENDIF

  -- check for server-side errors
  IF SUB_STR(response, 1, 1)='-' THEN
    WRITE TPERROR('[load_configuration] Server error', CR)
  ENDIF
  
  CLOSE FILE fid
  MSG_DISCO(connection, status)  
END patch_string